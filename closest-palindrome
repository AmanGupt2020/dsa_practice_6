//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
public:
	long long int closestPalindrome(long long int num){
	    // Code here
	    if (num < 10) {
	        return num;
	    }
	    using ll = long long;
	    ll p = 1;
	    while (p <= num) {
	        p *= 10;
	    }
	    p /= 10;
	    ll l = 1, r = p, n = num / p + num / p * p;
	    ll ans = 0;
	    auto add = [&](ll a) {
	        ll d1 = abs(num - a), d2 = abs(num - ans);
	        ans = d1 == d2 ? min(a, ans) : d1 < d2 ? a : ans;
	    };
	    add(p - 1);
	    while (l <= r) {
	        add(n);
	        if (n / r % 10 < 9) {
	            add(n + l + r * (l != r));
	        }
	        if (n / r % 10 > 0) {
	            add(n - l - r * (l != r) + (r - 1) / 10 / l * l * 10);
	        }
	        l *= 10, r /= 10;
	        if (l < r) {
	            n += num / r % 10 * l + num / r % 10 * r;
	        }
	        else if (l == r) {
	            n += num / r % 10 * r;
	        }
	    }
	    return ans;
	}

};

//{ Driver Code Starts.
int main(){
	int tc;
	cin >> tc;
	while(tc--){
		long long int num;
		cin >> num;
		Solution obj;
		long long int ans = obj.closestPalindrome(num);
		cout << ans <<"\n";
	}
	return 0;
}
// } Driver Code Ends
